<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fun.pullock.permission.core.repository.mapper.RoleResourceMapper">
  <resultMap id="BaseResultMap" type="fun.pullock.permission.core.repository.model.RoleResourceDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="modifier_id" jdbcType="BIGINT" property="modifierId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="resource_code" jdbcType="VARCHAR" property="resourceCode" />
  </resultMap>
  <sql id="Base_Column_List">
    id, creator_id, modifier_id, create_time, update_time, role_code, resource_code
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_resource
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role_resource
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="fun.pullock.permission.core.repository.model.RoleResourceDO">
    insert into role_resource (id, creator_id, modifier_id, 
      create_time, update_time, role_code, 
      resource_code)
    values (#{id,jdbcType=BIGINT}, #{creatorId,jdbcType=BIGINT}, #{modifierId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{roleCode,jdbcType=VARCHAR}, 
      #{resourceCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="fun.pullock.permission.core.repository.model.RoleResourceDO">
    insert into role_resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="modifierId != null">
        modifier_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="roleCode != null">
        role_code,
      </if>
      <if test="resourceCode != null">
        resource_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="modifierId != null">
        #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="resourceCode != null">
        #{resourceCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="fun.pullock.permission.core.repository.model.RoleResourceDO">
    update role_resource
    <set>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="modifierId != null">
        modifier_id = #{modifierId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="resourceCode != null">
        resource_code = #{resourceCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="fun.pullock.permission.core.repository.model.RoleResourceDO">
    update role_resource
    set creator_id = #{creatorId,jdbcType=BIGINT},
      modifier_id = #{modifierId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      role_code = #{roleCode,jdbcType=VARCHAR},
      resource_code = #{resourceCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>